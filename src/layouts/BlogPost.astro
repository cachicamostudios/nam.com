---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, author } = Astro.props;
---

<html lang="es">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 100%;
        max-width: 720px;
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 0.4em;
        font-size: 0.9rem;
      }
      .author {
        font-weight: 400;
        font-size: 0.9rem;
        color: #111;
        opacity: 0.7;
        margin-left: 0;
        text-align: center;
      }
      .last-updated-on {
        font-style: italic;
        text-align: center;
        margin-top: 0.3em;
      }
      .header-actions {
        display: flex;
        gap: 0.6em;
        align-items: center;
        padding: 0.5em 1em;
        margin-top: 0.6em;
      }
      .toggle-darkmode,
      .hamburger {
        font-size: 1.4rem;
        padding: 0.3em 0.6em;
        border-radius: 0.5em;
        cursor: pointer;
      }
      @media (max-width: 480px) {
        .title h1 {
          font-size: 1.6rem;
        }
        .date {
          font-size: 0.85rem;
          justify-content: center;
        }
        .author {
          font-size: 0.85rem;
        }
        .header-actions {
          justify-content: flex-end;
          padding-right: 1em;
          margin-top: 1em;
        }
        .toggle-darkmode,
        .hamburger {
          font-size: 1.2rem;
          padding: 0.25em 0.5em;
        }
      }
    </style>
  </head>

  <body>
    <header class="main-header">
      <div class="logo">
        <a href="/" aria-label="Inicio √±am.com">
          <img src="/logo.svg" alt="Logo neo-brutalista √±am.com" class="logo-img"/>
        </a>
      </div>
      <div class="header-actions">
        <button class="toggle-darkmode" id="toggle-dark">üåô/‚òÄÔ∏è</button>
        <button class="hamburger" id="hamburger-btn" aria-label="Abrir men√∫">&#9776;</button>
        <nav class="nav-menu" id="nav-menu">
          <a href="/" class="nav-link">Inicio</a>
          <a href="/about" class="nav-link">Sobre m√≠</a>
          <a href="/archivo" class="nav-link">Archivo</a>
          <a href="/galeria" class="nav-link">Galer√≠a</a>
          <a href="/recetas" class="nav-link">Recetas</a>
          <a href="https://t.me/+7CGABku_I01hYmRk" target="_blank" rel="noopener" class="nav-link">Telegram</a>
        </nav>
      </div>
    </header>

    <main>
      <article>
        <div class="hero-image">
          {heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              <FormattedDate date={pubDate} />
            </div>
            {author && <div class="author">por {author}</div>}
            {updatedDate && (
              <div class="last-updated-on">
                √öltima actualizaci√≥n <FormattedDate date={updatedDate} />
              </div>
            )}
            <h1>{title}</h1>
            <hr />
          </div>
          <slot />
        </div>
      </article>
    </main>

    <Footer />

    <script>
      // Modo oscuro y men√∫ hamburguesa
      document.addEventListener('DOMContentLoaded', function () {
        // Bot√≥n de modo oscuro
        const toggleBtn = document.getElementById('toggle-dark');
        toggleBtn && toggleBtn.addEventListener('click', () => {
          document.body.classList.toggle('dark');
        });

        // Men√∫ hamburguesa
        const hamburger = document.getElementById('hamburger-btn');
        const navMenu = document.getElementById('nav-menu');
        hamburger && hamburger.addEventListener('click', () => {
          navMenu.classList.toggle('open');
        });

        // Cierra el men√∫ al hacer click fuera en m√≥vil
        document.addEventListener('click', function (event) {
          if (navMenu && hamburger && !navMenu.contains(event.target) && !hamburger.contains(event.target)) {
            navMenu.classList.remove('open');
          }
        });
      });
    </script>
  </body>
</html>
